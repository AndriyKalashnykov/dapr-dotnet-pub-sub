services:
  
  zookeeper:
    container_name: zookeeper
    image: confluentinc/cp-zookeeper:7.9.2
    restart: unless-stopped
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ALLOW_ANONYMOUS_LOGIN: "true"
    ports:
      - 2181:2181
    volumes:
      - zookeeper_logs:/var/lib/zookeeper/log
      - zookeeper_data:/var/lib/zookeeper/data
    networks:
      - kafka-net
  
  kafka:
    container_name: kafka
    image: confluentinc/cp-kafka:7.3.1
    restart: unless-stopped
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
      - 29092:29092
      - 39092:39092
    environment:
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092,PLAINTEXT_DOCKER://host.docker.internal:39092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT,PLAINTEXT_DOCKER:PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_LOG4J_ROOT_LOGLEVEL: ERROR
      KAFKA_LOG4J_LOGGERS: org.apache.zookeeper=ERROR,org.apache.kafka=ERROR,kafka=ERROR,kafka.cluster=ERROR,kafka.controller=ERROR,kafka.coordinator=ERROR,kafka.log=ERROR,kafka.server=ERROR,kafka.zookeeper=ERROR,state.change.logger=ERROR
      KAFKA_JMX_PORT: 9997
      KAFKA_NUM_PARTITIONS: 1
    networks:
      - kafka-net
    healthcheck:
      test: ["CMD", "kafka-topics", "--bootstrap-server", "localhost:9092", "--list", "||", "exit", "1"]
      interval: 15s
      timeout: 10s
      retries: 10
      start_period: 40s  # Give Kafka more time for initial startup
  
  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:v0.7.2
    ports:
      - 9080:8080
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:29092
      KAFKA_CLUSTERS_0_METRICS_PORT: 9997
      KAFKA_CLUSTERS_0_AUDIT_TOPICAUDITENABLED: 'true'
      KAFKA_CLUSTERS_0_AUDIT_CONSOLEAUDITENABLED: 'true'
    networks:
      - kafka-net
    depends_on:
      kafka:
        condition: service_healthy

networks:
  kafka-net:
    driver: bridge

# Named volumes for persistence
volumes:
  zookeeper_logs:
    driver: local
  zookeeper_data:
    driver: local

# Test
# docker exec kafka bash -c "nc -z -v kafka 9092"